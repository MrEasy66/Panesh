<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBoxIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="PictureBoxIcon.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>